{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Apresenta\u00e7\u00e3o do reposit\u00f3rio","text":"<p> Desenvolvimento de um interpretador de Python para C++ como parte da disciplina de Compiladores I, na Faculdade de Ci\u00eancia, Tecnologia e Engenharia (FCTE) da Universidade de Bras\u00edlia (UnB).  Utilizamos o reposit\u00f3rio para compor nosso projeto final bem como as atividades realizadas na disciplina semanalmente. </p>"},{"location":"#integrantes-da-equipe-ii","title":"Integrantes da Equipe II","text":"<sub>Felipe Freire</sub> <sub>Breno Alexandre</sub> <sub>J\u00falio Cesar</sub> <sub>Lucas Soares</sub> <sub></sub> <sub>Kaleb de Souza</sub> <sub>Othavio Araujo</sub> <sub></sub>"},{"location":"atas-reuniao/reuniao/ata-reuniao-1/","title":"Ata da Reuni\u00e3o 1 - Escolha da proposta de desenvolvimento","text":"<p>Data: 03/04/2025 Hor\u00e1rio: 19:00 Local: Teams  </p> <p>Respons\u00e1vel pela reuni\u00e3o: Lucas Respons\u00e1vel pela ATA: Bob  </p>"},{"location":"atas-reuniao/reuniao/ata-reuniao-1/#participantes","title":"Participantes","text":"Nome Fun\u00e7\u00e3o Presen\u00e7a Felipe das Neves Membro \u2714\ufe0f Breno Alexandre Respons\u00e1vel pela reuni\u00e3o \u2714\ufe0f J\u00falio Cesar Membro \u2714\ufe0f Kaleb de Souza Membro \u2714\ufe0f Othavio Araujo Membro \u2714\ufe0f"},{"location":"atas-reuniao/reuniao/ata-reuniao-1/#objetivo-da-reuniao","title":"Objetivo da Reuni\u00e3o","text":"<p>Elicitar requisitos do software junto com os clientes representantes da...</p>"},{"location":"atas-reuniao/reuniao/ata-reuniao-1/#resumo-do-que-foi-debatido","title":"Resumo do que foi debatido","text":"<p>Baseado em um documento pr\u00e9vio elaborado...</p>"},{"location":"atas-reuniao/reuniao/ata-reuniao-1/#decisoes-sobre-a-aplicacao","title":"Decis\u00f5es sobre a Aplica\u00e7\u00e3o","text":"<p>Baseado em um documento pr\u00e9vio elaborado...</p>"},{"location":"atas-reuniao/reuniao/ata-reuniao-1/#prioridades-definidas","title":"Prioridades Definidas","text":"<p>Baseado em um documento pr\u00e9vio elaborado...</p>"},{"location":"atas-reuniao/reuniao/ata-reuniao-1/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o da Altera\u00e7\u00e3o Nome(s) Integrante(s) 1.0 25/11/2024 Modelagem do Artefato Felipe Freire"},{"location":"atv-sala/atv1/","title":"Configura\u00e7\u00f5es de Ambiente","text":"<p>Os Arquivos est\u00e3o na branch \"aula\".</p> <p>Para compilar e executar o exemplo hello.l + hello.y, voc\u00ea precisa:</p> <ol> <li>Gerar os arquivos do Bison (no terminal, no mesmo diret\u00f3rio): <pre><code>bison -d hello.y\n</code></pre></li> <li> <p>Isso criar\u00e1 hello.tab.c (com o c\u00f3digo C do parser) e hello.tab.h (com as defini\u00e7\u00f5es dos tokens).</p> </li> <li> <p>Gerar o arquivo do Flex: <pre><code>flex hello.l\n</code></pre></p> </li> <li> <p>Isso criar\u00e1 lex.yy.c (c\u00f3digo C do analisador l\u00e9xico).</p> </li> <li> <p>Compilar tudo junto (com gcc ou outro compilador C): <pre><code>gcc -o hello hello.tab.c lex.yy.c -lfl\n</code></pre></p> </li> <li> <p>A op\u00e7\u00e3o <code>-lfl</code> linka a biblioteca do Flex (em algumas distros, pode ser <code>-ll</code>).</p> </li> <li> <p>Executar o bin\u00e1rio gerado: <pre><code>./hello\n</code></pre></p> </li> <li>Se voc\u00ea digitar HelloWorld (ou usar um arquivo de entrada contendo <code>Hello World</code>) o parser deve reconhecer e imprimir Hello, World! na tela (de acordo com as regras de gram\u00e1tica definidas).135mzD1ZBbD6M-8duQVhTYMZb_10_hOWJFWDvoCnPvOk/edit?gid=117011966#gid=117011966)   |</li> </ol>"},{"location":"atv-sala/atv1/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o da Altera\u00e7\u00e3o Nome(s) Integrante(s) 1.0 03/04/2025 Desenvolvimento Inicial da Estrutura do Artefato Felipe Freire"},{"location":"atv-sala/atv2/","title":"Configura\u00e7\u00f5es de Ambiente","text":"<p>Os Arquivos est\u00e3o na branch \"aula\".</p>"},{"location":"atv-sala/atv2/#passos-para-compilar-e-executar","title":"Passos para compilar e executar","text":"<ol> <li>Gerar o arquivo do Bison <pre><code>bison -d exemplo.y\n</code></pre></li> <li> <p>Isso criar\u00e1 dois arquivos: <code>exemplo.tab.c</code> e <code>exemplo.tab.h</code> (o <code>-d</code> gera o <code>.h</code> que cont\u00e9m as defini\u00e7\u00f5es dos tokens).</p> </li> <li> <p>Gerar o arquivo do Flex <pre><code>flex exemplo.l\n</code></pre></p> </li> <li> <p>Isso criar\u00e1 um arquivo <code>lex.yy.c</code>.</p> </li> <li> <p>Compilar tudo junto    Use um compilador C (por exemplo, gcc) para gerar o execut\u00e1vel:    <pre><code>gcc -o parser exemplo.tab.c lex.yy.c -lfl\n</code></pre></p> </li> <li> <p>A op\u00e7\u00e3o <code>-lfl</code> linka a biblioteca do Flex. Em algumas distros, pode ser necess\u00e1rio <code>-ll</code> (ou <code>-lfl -ll</code>) dependendo das vers\u00f5es, mas normalmente <code>-lfl</code> \u00e9 suficiente.</p> </li> <li> <p>Executar o programa </p> </li> <li>Se quiser digitar manualmente os dados:      <pre><code>./parser\n</code></pre>      Em seguida, digite os n\u00fameros na tela e pressione Enter ao final de cada. Para encerrar, pressione <code>Ctrl+D</code> (em sistemas Unix) ou <code>Ctrl+Z</code> (em Windows).</li> <li> <p>Se quiser processar o arquivo <code>entrada.txt</code>:      <pre><code>./parser entrada.txt\n</code></pre></p> </li> <li> <p>Verificar a sa\u00edda </p> </li> <li>A cada n\u00famero reconhecido, o programa imprime <code>N\u00famero lido: &lt;valor&gt;</code>.</li> <li>O que n\u00e3o bater com <code>[+\\-]?[0-9]{1,10}</code> ser\u00e1 ignorado ou tratado conforme suas regras.  </li> <li>Caso queira tratar caracteres n\u00e3o reconhecidos como erro, basta ajustar a regra <code>.</code> no arquivo <code>.l</code> para gerar alguma mensagem ou retornar um token de erro.</li> </ol>"},{"location":"atv-sala/atv2/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o da Altera\u00e7\u00e3o Nome(s) Integrante(s) 1.0 03/04/2025 Desenvolvimento Inicial da Estrutura do Artefato Felipe Freire"},{"location":"documento-firmware/documento-firmware/","title":"Documenta\u00e7\u00e3o Firmware","text":""},{"location":"documento-firmware/documento-firmware/#testes-iniciais","title":"Testes iniciais","text":""},{"location":"documento-firmware/documento-firmware/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"Vers\u00e3o Data Descri\u00e7\u00e3o da Altera\u00e7\u00e3o Nome(s) Integrante(s) 1.0 03/04/2025 Desenvolvimento Inicial da Estrutura do Artefato Felipe Freire"}]}